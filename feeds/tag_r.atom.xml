<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>InfoSec Zanshin - R</title><link href="https://asieira.github.io/" rel="alternate"></link><link href="https://asieira.github.io/feeds/tag_r.atom.xml" rel="self"></link><id>https://asieira.github.io/</id><updated>2016-07-21T18:01:00-03:00</updated><entry><title>Using OpenMP with R packages in OS X</title><link href="https://asieira.github.io/using-openmp-with-r-packages-in-os-x.html" rel="alternate"></link><published>2016-07-21T18:01:00-03:00</published><updated>2016-07-21T18:01:00-03:00</updated><author><name>Alexandre Sieira</name></author><id>tag:asieira.github.io,2016-07-21:/using-openmp-with-r-packages-in-os-x.html</id><summary type="html">&lt;p&gt;Using OpenMP to allow parallel computation in R packages on Mac OS X&lt;/p&gt;</summary><content type="html">&lt;p&gt;Lots of R packages have underlying implementations in C and C++, so they need to be compiled to
function properly. But when you install a package in OS X you will probably get a pre-compiled version
of said package from &lt;a href="https://cran.r-project.org/"&gt;CRAN&lt;/a&gt; that used their build environment and the
default package options.&lt;/p&gt;
&lt;p&gt;Using a pre-compiled package is almost never a problem, except when the default options don't fit
your requirements. In that case, you'll need to install them from source and make sure you get
the compilation environment right.&lt;/p&gt;
&lt;p&gt;I recently ran into a package that had the capability of using &lt;a href="http://openmp.org/"&gt;OpenMP&lt;/a&gt; to perform
computation in parallel and take advantage of my MacBook Pro's multi-core processor to the fullest.
If you are interested in how this works and how to integrate it into your own R packages, check out
the &lt;a href="https://wrathematics.github.io/RparallelGuide/"&gt;Parallelism, R, and OpenMP&lt;/a&gt; guide by 
&lt;a href="https://wrathematics.github.io/"&gt;Drew Schmidt&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So this is all awesome, but there's a catch. There's always a catch, right?&lt;/p&gt;
&lt;p&gt;Turns out the binary version of packages available at &lt;a href="https://cran.r-project.org/"&gt;CRAN&lt;/a&gt; are not
compiled to use OpenMP, since not all systems are equipped to support it. Moreover, if you try to 
install the package from source on OS X, it will try to use &lt;code&gt;clang&lt;/code&gt; / &lt;code&gt;clang++&lt;/code&gt; which in my experience
does not support OpenMP either.&lt;/p&gt;
&lt;p&gt;Before I get into how I was eventually able to fix this, if you don't have &lt;a href="http://brew.sh/"&gt;homebrew&lt;/a&gt;
installed on your Mac yet, stop everything and go install it. Yes, now. I'll wait.&lt;/p&gt;
&lt;p&gt;So, I found lots of outdated references to a homebrew package called &lt;code&gt;clang-omp&lt;/code&gt;, but as you can see
at its &lt;a href="https://clang-omp.github.io/"&gt;website&lt;/a&gt; the project was moved elsewhere. And it doesn't exist
in homebrew anymore, so that is a dead end.&lt;/p&gt;
&lt;p&gt;What finally worked for me was to install GCC 6 using homebrew, and using it to compile the R packages
with OpenMP support. This is how you do it using homebrew:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;brew install gcc --without-multilib
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It's important to include &lt;code&gt;--without-multilib&lt;/code&gt; since it apparently 
&lt;a href="http://stackoverflow.com/questions/30049486/what-does-gcc-without-multilib-mean"&gt;creates problems&lt;/a&gt; with
OpenMP. Unless you're cross-compiling to different architectures you probably won't miss it anyway.&lt;/p&gt;
&lt;p&gt;If you already had gcc installed with homebrew, just replace &lt;code&gt;install&lt;/code&gt; above with &lt;code&gt;reinstall&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After you do that, you'll notice that gcc executables should have been linked to &lt;code&gt;/usr/local/bin&lt;/code&gt;. Next, 
what you'll need to do is to create (or edit) &lt;code&gt;~/.R/Makevars&lt;/code&gt; to reference them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;CC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/bin/gcc-6
&lt;span class="nv"&gt;CXX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/bin/g++-6
&lt;span class="nv"&gt;CXX1X&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/bin/g++-6
&lt;span class="nv"&gt;CXX11&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/bin/g++-6
&lt;span class="nv"&gt;SHLIB_CXXLD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/bin/g++-6
&lt;span class="nv"&gt;FC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/bin/gfortran-6
&lt;span class="nv"&gt;F77&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/bin/gfortran-6
&lt;span class="nv"&gt;MAKE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;make -j8

&lt;span class="nv"&gt;SHLIB_OPENMP_CFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-fopenmp
&lt;span class="nv"&gt;SHLIB_OPENMP_CXXFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-fopenmp
&lt;span class="nv"&gt;SHLIB_OPENMP_FCFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-fopenmp
&lt;span class="nv"&gt;SHLIB_OPENMP_FFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-fopenmp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Make sure you adjust the major version on the executable file names to match what homebrew installed in 
the last step.&lt;/p&gt;
&lt;p&gt;After all this, uninstall the R packages you want to with OpenMP with, and 
&lt;a href="http://stackoverflow.com/questions/1474081/how-do-i-install-an-r-package-from-source"&gt;reinstall them from source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That's it! Hopefully you will now have a working OpenMP-enabled R package to work with.&lt;/p&gt;</content><category term="R"></category></entry><entry><title>Introducing SnakeCharmR</title><link href="https://asieira.github.io/introducing-snakecharmr.html" rel="alternate"></link><published>2016-06-13T19:17:00-03:00</published><updated>2016-06-13T19:17:00-03:00</updated><author><name>Alexandre Sieira</name></author><id>tag:asieira.github.io,2016-06-13:/introducing-snakecharmr.html</id><summary type="html">&lt;p&gt;A modern R package to allow Python to be called from R&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have been using &lt;a href="https://cran.r-project.org/web/packages/rPython/index.html"&gt;rPython&lt;/a&gt; for some time 
in Linux and Mac OS X environments. When I first found out about it, the idea of using JSON as a way to
serialize and deserialize values between Python and R was beautifully simple and intuitive.&lt;/p&gt;
&lt;p&gt;However, over time I realized &lt;a href="https://cran.r-project.org/web/packages/rPython/index.html"&gt;rPython&lt;/a&gt; 
suffered from a more than a few issues. Plus, I noticed that the codebase hadn't been updated in a long
time, was based on direct C code and used RJSONIO for the underlying JSON conversions.&lt;/p&gt;
&lt;p&gt;So I decided to create a new package called &lt;a href="https://github.com/asieira/SnakeCharmR"&gt;SnakeCharmR&lt;/a&gt; inspired
by &lt;a href="https://cran.r-project.org/web/packages/rPython/index.html"&gt;rPython&lt;/a&gt; but with the following differences:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;a href="https://cran.r-project.org/web/packages/Rcpp/index.html"&gt;Rcpp&lt;/a&gt; instead of direct R to C bindings;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Replace &lt;a href="https://cran.r-project.org/web/packages/RJSONIO/index.html"&gt;RJSONIO&lt;/a&gt; with the much more 
well-behaved &lt;a href="https://cran.r-project.org/web/packages/jsonlite/index.html"&gt;jsonlite&lt;/a&gt; for JSON serialization
/ deserialization;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Allow the calling code to have full control of the options to be passed to &lt;code&gt;jsonlite::fromJSON&lt;/code&gt; and 
&lt;code&gt;jsonlite::toJSON&lt;/code&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;a href="https://cran.r-project.org/web/packages/testthat/index.html"&gt;testthat&lt;/a&gt; for unit testing as
much as possible, including &lt;a href="https://travis-ci.org/asieira/SnakeCharmR"&gt;Travis&lt;/a&gt; and
&lt;a href="https://codecov.io/gh/asieira/SnakeCharmR"&gt;Codecov&lt;/a&gt; for automation of tests and coverage.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The package is not a drop-in replacement to rPython, but most of existing code will require very few updates
to work with it. Most of them will be related to the differences between RJSONIO and jsonlite.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;The package has not yet been submitted to CRAN, so currently this is how you install it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;devtools&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; install_github&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;asieira/SnakeCharmR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Please refer to the &lt;a href="https://github.com/asieira/SnakeCharmR/blob/master/README.md"&gt;README&lt;/a&gt; for more details
on linking with the proper Python version.&lt;/p&gt;
&lt;h2&gt;Comparison with &lt;a href="https://cran.r-project.org/web/packages/rPython/index.html"&gt;rPython&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A few examples of differences in the way &lt;a href="https://github.com/asieira/SnakeCharmR"&gt;SnakeCharmR&lt;/a&gt; and 
&lt;a href="https://cran.r-project.org/web/packages/rPython/index.html"&gt;rPython&lt;/a&gt; handle some situations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/asieira/SnakeCharmR"&gt;SnakeCharmR&lt;/a&gt; will correctly remove any temporary values used
for function/method arguments and/or serialized values from the Python environment. In the case
of &lt;a href="https://cran.r-project.org/web/packages/rPython/index.html"&gt;rPython&lt;/a&gt;, they would remain in memory
until overwritten by another operation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Handling of strings with single quotes:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rPython&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; python.assign&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  File &lt;span class="s"&gt;&amp;quot;&amp;lt;string&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; line &lt;span class="m"&gt;2&lt;/span&gt;
    a &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39; [ &amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="err"&gt; ] &amp;#39;&lt;/span&gt;
                 &lt;span class="o"&gt;^&lt;/span&gt;
SyntaxError&lt;span class="o"&gt;:&lt;/span&gt; EOL &lt;span class="kr"&gt;while&lt;/span&gt; scanning string literal
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;SnakeCharmR&lt;span class="p"&gt;)&lt;/span&gt;
SnakeCharmR v1.0.2 &lt;span class="o"&gt;-&lt;/span&gt; R and Python Integration
Contribute and submit issues at https&lt;span class="o"&gt;://&lt;/span&gt;github.com&lt;span class="o"&gt;/&lt;/span&gt;asieira&lt;span class="o"&gt;/&lt;/span&gt;SnakeCharmR
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; py.assign&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; py.get&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Handling of strings with unicode values:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rPython&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; python.assign&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;áéíóú&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; python.get&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\xe1\xe9\xed\xf3\xfa&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;Encoding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;python.get&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;unknown&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;SnakeCharmR&lt;span class="p"&gt;)&lt;/span&gt;
SnakeCharmR v1.0.2 &lt;span class="o"&gt;-&lt;/span&gt; R and Python Integration
Contribute and submit issues at https&lt;span class="o"&gt;://&lt;/span&gt;github.com&lt;span class="o"&gt;/&lt;/span&gt;asieira&lt;span class="o"&gt;/&lt;/span&gt;SnakeCharmR
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; py.assign&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;áéíóú&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; py.get&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;áéíóú&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;Encoding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;py.get&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Improved exception handling, which in &lt;a href="https://github.com/asieira/SnakeCharmR"&gt;SnakeCharmR&lt;/a&gt; now 
includes a full stack trace to help debugging errors that happen in Python:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rPython&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; python.exec&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;def a():\n    return b()&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; python.exec&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;def b():\n    raise Exception(&amp;#39;uh oh&amp;#39;)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; python.call&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
Error &lt;span class="kr"&gt;in&lt;/span&gt; python.exec&lt;span class="p"&gt;(&lt;/span&gt;python.command&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; uh oh
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;SnakeCharmR&lt;span class="p"&gt;)&lt;/span&gt;
SnakeCharmR v1.0.2 &lt;span class="o"&gt;-&lt;/span&gt; R and Python Integration
Contribute and submit issues at https&lt;span class="o"&gt;://&lt;/span&gt;github.com&lt;span class="o"&gt;/&lt;/span&gt;asieira&lt;span class="o"&gt;/&lt;/span&gt;SnakeCharmR
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; py.exec&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;def a():\n    return b()&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; py.exec&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;def b():\n    raise Exception(&amp;#39;uh oh&amp;#39;)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; py.call&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
Error &lt;span class="kr"&gt;in&lt;/span&gt; py.exec&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_SnakeCharmR_return = json.dumps(%s(%s))&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; fname&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt; 
  Traceback &lt;span class="p"&gt;(&lt;/span&gt;most recent call last&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  File &lt;span class="s"&gt;&amp;quot;&amp;lt;string&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; line &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;module&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  File &lt;span class="s"&gt;&amp;quot;&amp;lt;string&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; line &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;in&lt;/span&gt; a
  File &lt;span class="s"&gt;&amp;quot;&amp;lt;string&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; line &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;in&lt;/span&gt; b
Exception&lt;span class="o"&gt;:&lt;/span&gt; uh oh
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Future Improvements&lt;/h2&gt;
&lt;p&gt;There are still a few pending issues to work on before SnakeCharmR can be submitted to CRAN, check
out &lt;a href="https://github.com/asieira/SnakeCharmR/issues"&gt;GitHub issues&lt;/a&gt; and help if you can.&lt;/p&gt;
&lt;p&gt;The most relevant gap is testing and ensuring SnakeCharmR works correctly on Windows. If any of you 
have had experience with compiling Rcpp packages that use external libraries on Windows, your help 
will be much appreciated.&lt;/p&gt;
&lt;p&gt;Many thanks to &lt;a href="https://twitter.com/hrbrmstr"&gt;Bob Rudis&lt;/a&gt; for his invaluable help in getting this 
project going. &lt;/p&gt;</content><category term="R"></category><category term="Python"></category></entry></feed>